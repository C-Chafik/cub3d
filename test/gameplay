J'ai eu une idee de gameplay
On laisse tomber le truc des mans etc
le personnage se deplace normalement sur la map il y a des sprites de lumiere etc ca change pas ca

Gameplay:
```
Il y a toujours l'histoire du personnage bloque dans le jeu et que sa presence corrompt la memoire
```
```
A chaque fois que le personnage quitte une case sol, la case sol devient corrompu (elle devient -1 sur la map et la texture de ce sol change) si le joueur va dans une case corrompu il tombe dans le vide et il meurt (je te montre une video de comment on peut le faire mourir a la fin)
```
```
Du coup le personnage doit se deplacer intelligement pour reussir a parcourir le labyrinthe et s'echapper au lieu de courir partout et retourner sur ses pas
```
1 : le personnage peut ramasser les sprites lumieres IDEE 1
```
Ca les met en mode OFF du coup elles ne font plus de lumiere et il peut garder que une lumiere sur lui a la fois.
Quand le joueur a une lumiere sur lui il peut la placer ou il veut dans son champ de vision en cliquant sur une case de sol, une fois que la lumiere est replace sur le sol, elle devient ON et elle refonctionne normal
```
Soit celui d'au dessus, soit celui d'en dessous

1 BIS : le personnage peut frapper les sprites de lumieres
```
Au lieu d'etre ramassable et reposable etc, les lumieres restent activent mais elles sont pousse vers l'angle de vue du joueur du coup le joueur doit aller sur la case du sprite lumiere se tourner vers la ou il veut et interagir avec la lumiere, elle va avancer dans la direction ou le joueur regarde et s'arreter des qu'elle rencontre un mur 
```
2 : le personnage peut placer une camera
```
Le joueur appuie sur une touche pour se mettre en mode camera
Sa position X, son Y, son Z et son angle sont enregistre dans des variables
Cette fois il clique sur un mur pour placer la camera, du coup le x et le y du joueur devienne ceux de la camera et l'angle de la camera devient l'inverse de l'angle du joueur
en gros la camera va commencer par regarder vers le joueur

Les inputs de mouvements seront tous desactive sauf les mouvements de rotation de la vue
du coup sa permettra au joueur de voir une intersection au lieu d'y aller directement, ca fait qu'il se deplace moins et il va pas dans des cul de sac et se retrouve coince a cause des cases corrompu qu'il a cree derriere lui sur son chemin
Quand le joueur appuie sur la touche pour desactiver le mode camera, son x, y et angle redevienne ceux qu'on a enregistre au lancement du mode camera et il peut de nous se deplacer normalement

(On aura rien du tout gerer de complique pour la camera, on change direct cub->x, cub->y, cub->a et on fait le raycasting normal mais a partir de nos nouvelles valeurs, quand il quitte on remet juste cub->x = cub->savex, cub->y = cub->savey, cub->a = cub->savea)
```
3 : le role des lumieres
```
Comme le personnage peut maintenant regarder a travers les cameras et que la map est sombre, il ne verra rien du tout dans les zones sombres du coup son but sera de jouer un maximum avec les lumieres et les cameras au lieu de se deplacer reelement pour pas corrompre les cases. On fait une map de taille moyenne et un peu labyrinthique pour eviter que ce soit trop long et trop complique.
```
4: But du joueur
```
Trouver la cle de la porte de sortie et s'echapper
```
5: Sprite necessaire
```
Lumieres
Porte principal a ouvrir avec la cle -> texture porte blinde
Porte random(chaque salle aura plusieurs porte pour eviter que le joueur rentre et soit coince parce qu'il peut plus faire demi tour) -> texture porte classique (pas oblige)
Fenetre (meme chose que les portes ca doit etre des sprites qui pivote pas en gros c'est des carre vide au centre donc on peut voir au travers) (pas oblige)
Cle a ramasse (Une carte d'acces ou une cle usb ou une vraie cle)
Joueur (Un sprite de personnage avec un casque ou visiere qui peut lui donner acces aux cameras (par rapport au truc de memoire etc, un personnage style TRON c'est parfait) comme ca meme si on voit le personnage rien faire bah c'est parce qu'il regarde les cam a travers son casque)
```
